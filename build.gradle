/*
 * Copyright (c) 2021. Dhyey Shah, Saurabh Pethani, Romil Nisar
 *
 * Developed by:
 *         Dhyey Shah<dhyeyshah4@gmail.com>
 *         https://github.com/dhyey-shah
 *
 * Contributors:
 *         Saurabh Pethani<spethani28@gmail.com>
 *         https://github.com/SaurabhPethani
 *
 *         Romil Nisar<rnisar7@gmail.com>
 *
 *
 * This file is part of Cafe.
 *
 * Cafe is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation,  version 3 of the License.
 *
 * Cafe is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Cafe.  If not, see <https://www.gnu.org/licenses/>.
 */

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building a CLI application.
    id 'application'

    id 'distribution'
}

group 'cafe'
version '0.0.1-beta'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
    options.compilerArgs += ["-Xlint:all", "-Xlint:-serial", "-parameters"]
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {

    // https://mvnrepository.com/artifact/org.ow2.asm/asm
    implementation group: 'org.ow2.asm', name: 'asm', version: '7.3.1'

    // https://mvnrepository.com/artifact/com.beust/jcommander
    implementation group: 'com.beust', name: 'jcommander', version: '1.78'

    // https://search.maven.org/artifact/org.fusesource.jansi/jansi/2.1.1/jar
    implementation 'org.fusesource.jansi:jansi:2.1.1'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
}

distributions{
    main{
        baseName("cafe")
        contents{
            from(projectDir){
                include('README*')
                include('COPYRIGHT*')
                include('LICENSE*')
                include('THIRD-PARTY')
            }
            into('examples'){
                from('examples'){
                    include '**/*.cafe'
                }
            }
        }
    }

}

startScripts{
    applicationName = 'cafe'
}

run {
    // RUN
    args = ["-r","-cp=.\\examples\\","ThisBinding"]

    // Compile
    // args = ["-c",".\\examples\\ThisBinding.cafe"]

    // Usage
    // args = ["--usage", "-c"]
}

application {
    // Define the main class for the application.
    mainClassName = 'compiler.Main'
}
